apply plugin: 'com.novoda.bintray-release'

android {
    defaultConfig {
        archivesBaseName = "$archivesBaseName-$versionName"
    }
}
ext {
    ARTIFACT_ID = 'rxcore'
    VERSION_NAME = '1.3.4' // 版本号
    VERSION_CODE = 4 //your version

    DESCRIPTION = 'RxJava2+Retrofit2 Core'

    SITE_URL = 'https://github.com/0xm1nam0/RxCore'
    GIT_URL = 'https://github.com/0xm1nam0/RxCore'
    GROUP_NAME = 'com.github.weiss' // 模块目录

    MODULE_NAME = 'rxcore'  // 此字段为你的模块名称，唯一标识符

    LICENSE = 'Apache-2.0'

    DEVELOPER_ID = 'weisswill' // bintray用户名
    DEVELOPER_NAME = '0xm1nam0'
    DEVELOPER_EMAIL = 'kleinminamo@gmail.com'

    IS_UPLOADING = project.getGradle().startParameter.taskNames.any{it.contains('bintrayUpload')}
}

publish {
    repoName = 'maven'  // 此字段为你的仓库名称，默认为"maven"，上传的时候记得检查，否则上传会报错
    userOrg = DEVELOPER_ID
    groupId = GROUP_NAME
    artifactId = ARTIFACT_ID
    publishVersion = VERSION_NAME
    desc = DESCRIPTION
    website = SITE_URL
}

subprojects {
    group = GROUP_NAME
    version = VERSION

    if (IS_UPLOADING && project.name in [MODULE_NAME]) {
        println project.name
        apply plugin: 'maven'

        gradle.taskGraph.whenReady { taskGraph ->
            taskGraph.getAllTasks().find {
                it.path == ":$project.name:generatePomFileForMavenPublication"
            }.doLast {
                file("build/publications/maven/pom-default.xml").delete()
                println 'Overriding pom-file to make sure we can sync to maven central!'
                pom {
                    //noinspection GroovyAssignabilityCheck
                    project {
                        name "$project.name"
                        artifactId ARTIFACT_ID
                        packaging project.name == 'compiler' ? 'jar' : 'aar'
                        description DESCRIPTION
                        url SITE_URL
                        version VERSION_NAME

                        scm {
                            url GIT_URL
                            connection GIT_URL
                            developerConnection GIT_URL
                        }

                        licenses {
                            license {
                                name LICENSE
                            }
                        }

                        developers {
                            developer {
                                id DEVELOPER_ID
                                name DEVELOPER_NAME
                                email DEVELOPER_EMAIL
                            }
                        }
                    }
                }.writeTo("build/publications/maven/pom-default.xml")
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 执行 ./gradlew clean build bintrayUpload -PbintrayUser=weisswill -PbintrayKey=BINTRAY_KEY -PdryRun=false
